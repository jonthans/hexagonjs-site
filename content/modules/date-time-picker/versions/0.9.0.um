@version 0.9.0

  @description
    A combined date/time picker component, for selecting both date and time at the same time.

  @examples
    @example
      @html
        <div id="dateTimePickerExample"></div>

      @js
        new hx.DateTimePicker('#dateTimePickerExample')

  @api Date Time Picker
    @prototype hx.DateTimePicker
      @extends EventEmitter
      @description: A class used to combine a date picker and a time picker so that they work toghether.

      @constructor
        @description: Creates a datepicker and a timepicker and appends them to the selected element.
        @param selector [String/HTMLElement]: The selector to use to build the date/time picker
        @param? type [String]
          @description: The type of datepicker to show, can be either 'datepicker' or 'calendar'
          @default: 'calendar'
        @param? showSeconds [Boolean]
          @description: Whether to show the seconds in the timepicker.
          @default: false

      @method setDate
        @description: Sets the date for the DateTimePicker. It can be used to set only the date or the date and the time.
        @param date [Date]: The date to set the timepicker to.
        @param? setTime [Boolean]
          @description: Whether to set the time as well as the date. Only the day/month/year will be updated unless this is passed in as true.
          @default: false
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setDay
        @description: A function used to set the currently selected day
        @param day [Number]: The day of the month to set
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setMonth
        @description: A function to set the currently selected month
        @param month [Number]: The month to show
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setYear
        @description: A function to set the currently selected year
        @param year [Number]: The year to set the date picker to
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setHour
        @description: A function to set the currently selected hour
        @param hour [Number]: The hour to set. Values accepted: 0 - 23. Passing in values outside this range will cause the timepicker to cycle into the next/previous day.
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setMinute
        @description: A function to set the currently selected minute
        @param minute [Number]: The minute to set. Values accepted 0 - 59. Passing in values outside this range will cause the timepicker to cycle into the next/previous hour.
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method setSecond
        @description: A function to set the currently selected second
        @param second [Number]: The second to set. Values accepted 0 - 59. Passing in values outside this range will cause the timepicker to cycle into the next/previous minute.
        @param? suppressCallback [Boolean]
          @description: A value used to prevent the change event being emitted.
          @default: false

      @method addDays
        @description: A function to add days to the currently selected date
        @param days [Number]: The number of days to add

      @method addMonths
        @description: A function to add months to the currently selected date
        @param months [Number]: The number of months to add

      @method addYears
        @description: A function to add years to the currently selected date
        @param years [Number]: The number of years to add

      @method addHours
        @description: A function to add hours to the currently selected date
        @param hours [Number]: The number of hours to add. Can be a negative number and will cycle to the next/previous day if the resulting value is not in the range of 0 - 23.

      @method addMinutes
        @description: A function to add minutes to the currently selected date
        @param minutes [Number]: The number of hours to add. Can be a negative number and will cycle to the next/previous hour if the resulting value is not in the range of 0 - 59.

      @method addSeconds
        @description: A function to add seconds to the currently selected date
        @param seconds [Number]: The number of hours to add. Can be a negative number and will cycle to the next/previous minute if the resulting value is not in the range of 0 - 59.

      @method getDate
        @description: A function to return the currently selected date.
        @returns Date

      @method getHour
        @description: Get the currently selected hour
        @returns Number

      @method getMinute
        @description: Get the currently selected minute
        @returns Number

      @method getSecond
        @description: Get the currently selected second
        @returns Number

      @method getScreenDate
        @description: A method to get the concatenated date/time string, as shown in the input fields. When using moment.js, this will include localised characters.
        @returns String

      @method getScreenTime
        @description: Get the time as it is displayed in the timepicker input box. When using moment.js, this will include localised characters.
        @returns String

      @method update
        @description: Used to refresh the date/time picker if the locale has been updated and moment.js is being used.

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @event change [Date]
          @description: Emitted when the date or time is changed. The data with the event is the currently selected date.

        @returns DateTimePicker: This DateTimePicker

  @theme

  @seeAlso
    @hyperlink(../date-picker)[Date Picker]
    @hyperlink(../time-picker)[Time Picker]
