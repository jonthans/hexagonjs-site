@version 0.9.0

  @description
    A set collection type. Proper sets are coming in ECMAScript 6 (which at time of writing has a scheduled release date of June 2015). This set object tries to keep as close as possible to the currently planned spec for sets, which should make it easier to swap out for the native implementation when it arrives and is well supported enough in browsers.

  @examples
    @codeblock js
      @inline 0.9.0/example.js

  @api Set
    @prototype hx.Set
      @constructor
        @description: A set collection type.
        @param? array [Array]: An optional array containing the values to initialise the set with

      @property size [Number]: The current size of the Set

      @method add
        @description: Adds the value to the set. Returns this Set for chaining.
        @param value [Any]: The key to add.
        @returns Set: This Set for chaining

      @method clear
        @description
          Removes all entries from the Set, resulting in an empty set with size 0. Returns undefined.

      @method delete
        @description: Removes an entry from the Set.
        @param item [Any]: The item to remove.
        @returns Boolean: Whether or not the value was removed (true if it was)

      @method entries
        @description
          Returns the items in the set as an array of 2-element arrays. The first entry in each of these arrays is the value, the second entry is also the value. This is just how the ES6 spec currently says to do things, presumably to stay consistent with the Map collection.
        @returns Array: An array of all the values from the set

      @method forEach
        @description
          Calls the function supplied for each entry in the set. Returns this Set for chaining.
        @param f [Function]: The function that should be called for each entry
          @param value [Any]: A value from the set.
        @param? thisArg [Object]
          An optional parameter which lets you supply the 'this' context to be used when calling f. The default is to use this Set.

      @method has
        @description
          Checks if the set contains an item. Returns true if the value is in the set, false otherwise.
        @param item [Any]: The item to check existence of.
        @returns Boolean: True if the value is in the set

      @method keys
        @description: Does the same as values()
        @returns Array: An array of all the values from the set

      @method values
        @description: Returns an array of the items in this Set.
        @returns Array: An array of all the values from the set

  @seeAlso
    @hyperlink(../list)[List]
    @hyperlink(../map)[Map]
