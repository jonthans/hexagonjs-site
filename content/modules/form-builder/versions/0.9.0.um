@version 0.9.0

  @description
    Provides an api for building forms in javascript.

  @examples
    @example
      @html: <form id="form"></form>
      @js: @inline 0.9.0/example.js

  @api Form Builder
    @prototype hx.Form
      @extends EventEmitter
      @description: Used for building forms.

      @constructor
        @description: Creates a new Form object that is linked to a form element on the page.
        @param selector [HTMLElement/String]: An HTMLElement or CSS selector that uniquely identifies your form.

      @method getData
        @description: Returns the data in the form as an object

      @method submit
        @description: Force the form to emit a 'submit' event.

      @method fill
        @description: Fill the form with some data.
        @param data [Object]:
          @description
            The values to fill the form with. The expected format of the data is a an object where the keys match the labels, and the values are the values to set the input to:
            @codeblock js
              {
                'Field 1': 25,
                'Field 2': 'green',
                'Field 3': true,
                'Field 4': 'Two'
              }

      @method on
        @description: Register a function that should be called every time an event of the given name happens.
        @param name [String]: The event type to listen out for
        @param callback [Function]
          @description: The function to call when an event occurs.
          @param data [Any]: The data sent along with the event (if any)

        @event submit [Object]
          @description: Emitted when the form is submitted. The form data is included with this event. The data is an object containing the same form data that would be retrieved with form.getData()

        @returns Form: This Form

      @group Add Component Methods
        @description: Methods that add components to the form
        @method addSubmit
          @description: Adds a submit button to the form
          @param text [String]: The text to give the button
          @param icon [String]: The icon class for the button's icon
          @returns Form: This Form

        @method addText
          @description: Adds a text field to the form.
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when creating the text field.
            @property required [Boolean]: Whether or not this is a required field.
            @property placeholder [String]: The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.
            @property type [String]: The type of text field - the default is 'text'.
            @property attrs [Array]: Additional attributes to give the text input. This should be an array of objects with type and value properties.
            @property autoCompleteData [Data/Function]: The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.
            @property autoCompleteOptions [Object]: The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property validator [Function]
              @description: A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
                @codeblock js
                  var validator = function(e){
                    if(e.target.value.length < 5){
                      "Please enter text longer than 5 characters"
                    }
                  }
              @param event [Event]: The input event that was emiited by the input element.
              @returns String: The error string to display if the string did not validate, or undefined if the contents of the input was valid.
          @returns Form: This Form

        @method addEmail
          @description: Adds an email field to the form.
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when creating the email field.
            @property required [Boolean]: Whether or not this is a required field.
            @property placeholder [String]: The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.
            @property attrs [Array]: Additional attributes to give the text input. This should be an array of objects with type and value properties.
            @property autoCompleteData [Data/Function]: The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.
            @property autoCompleteOptions [Object]: The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property validator [Function]
              @description: A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
                @codeblock js
                  var validator = function(e){
                    if(e.target.value.length < 5){
                      "Please enter text longer than 5 characters"
                    }
                  }
              @param event [Event]: The input event that was emiited by the input element.
              @returns String: The error string to display if the string did not validate, or undefined if the contents of the input was valid.
          @returns Form: This Form

        @method addNumber
          @description: Adds a number field to the form.
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when creating the number field.
            @property required [Boolean]: Whether or not this is a required field.
            @property placeholder [String]: The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.
            @property step [Number]: Specifies the legal number intervals for the input field. The default is 'any'.
            @property min [Number]: The minimum value the number input should allow. By default there is no minimum.
            @property max [Number]: The maximum value the number input should allow. By default there is no maximum.
            @property attrs [Array]: Additional attributes to give the text input. This should be an array of objects with type and value properties.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property validator [Function]
              @description
                @p: A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
                @codeblock js
                  var validator = function(e){
                    if(e.target.value.length < 5){
                      "Please enter text longer than 5 characters"
                    }
                  }
              @param event [Event]: The input event that was emiited by the input element.
              @returns String: The error string to display if the string did not validate, or undefined if the contents of the input was valid.
          @returns Form: This Form

        @method addPassword
          @description: Adds a password field to the form.
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when creating the password field.
            @property required [Boolean]: Whether or not this is a required field.
            @property placeholder [String]: The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.
            @property attrs [Array]: Additional attributes to give the text input. This should be an array of objects with type and value properties.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property validator [Function]
              @description: A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
                @codeblock js
                  var validator = function(e){
                    if(e.target.value.length < 5){
                      "Please enter text longer than 5 characters"
                    }
                  }
              @param event [Event]: The input event that was emiited by the input element.
              @returns String: The error string to display if the string did not validate, or undefined if the contents of the input was valid.
          @returns Form: This Form

        @method addUrl
          @description: Adds a url field to the form. The url field only allows addresses with the http:// or https:// prefix, for other url types, a text field should be used with a custom validator.

          @param name [String]: The field name.
          @param? options [Object]
            @description:The options to use when creating the email field.
            @property required [Boolean]: Whether or not this is a required field.
            @property placeholder [String]: The placeholder text to use - this will appear as a greyed out suggestion/hint in the input box.
            @property attrs [Array]: Additional attributes to give the text input. This should be an array of objects with type and value properties.
            @property autoCompleteData [Data/Function]: The data to use for auto complete suggestions. Can be either an array of data or a function that returns data. For a more detailed explanation, see the Auto Complete page.
            @property autoCompleteOptions [Object]: The options to use for the auto complete. For a more detailed explanation, see the Auto Complete page.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property validator [Function]
              @description: A function that is called when the 'oninput' function is called. It is passed the event object and should return an error message as a string:
                @codeblock js
                  var validator = function(e){
                    if(e.target.value.length < 5){
                      "Please enter text longer than 5 characters"
                    }
                  }
              @param event [Event]: The input event that was emiited by the input element.
          @returns Form: This Form

        @method addSelect
          @description: Adds a dropdown select input to the form.
          @param name [String]: The field name.
          @param values [Array[String]]: An array of the possible options in the dropdown.
          @param? options [Object]
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
            @property required [Boolean]
              @description:
                @p: Whether or not this is a required field.
                @p: When the value is 'false', the select object will start with a blank value but is not required to be selected.
                @p: When the value is 'true', the select object will start with a blank value and will not validate until a user has selected an option.
                @p: When the value is not defined, the dropdown behaves as normal.
          @returns Form: This Form

        @method addCheckbox
          @description: Adds a checkbox field to the form
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when adding the checkbox
            @property required [Boolean]: Whether or not this is a required field. The default is false. If set to required, the user must tick the box before the form can be submitted.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
          @returns Form: This Form

        @method addRadio
          @description:Adds a radio field to the form.
          @param name [String]: The field name.
          @param values [Array[String]]: An array that contains the list of labels for the radio options.
          @param? options [Object]
            @description: The options to use when adding the radio.
            @property required [Boolean]: Whether or not this is a required field
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
          @returns Form: This Form

        @method addTagInput
          @description: Adds a hx.TagInput field.
          @param name [String]: The field name.
          @param? options [Object]
            @description: The options to use when adding the tag input.
            @property classifier [Function]: See the hx.TagInput constructor for details.
            @property validator [Function]: See the hx.TagInput constructor for details.
            @property key [String]: The property name to map the input value to when filling the form and when getting the data.
          @returns Form: This Form

  @seeAlso
    @hyperlink(../select)[Select]
    @hyperlink(../tag-input)[Tag Input]
    @hyperlink(../autocomplete)[Autocomplete]
